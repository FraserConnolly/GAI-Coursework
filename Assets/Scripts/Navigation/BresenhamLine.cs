using System;
using System.Collections.Generic;
using System.Drawing;

namespace GCU.FraserConnolly
{
    public static class BresenhamLine
    {

        // This function has been copied from ChatGPT.
        // I used the following request to generate it 
        // 'Please write an implementation of Bresenham's Line Algorithm in C# where x and y can be any two points on a grid. The algorithm should output a list of coordinates that are sit along the line.'
        // I then modified the generated code to output an IEnumerable<Point> rather than the List<Tuple<int,int>> which was generated by ChatGPT.
        public static IEnumerable<Point> GetBresenhamLinePoints(Point a, Point b)
        {
            int x1, y1, x2, y2;

            x1 = a.X;
            y1 = a.Y;
            x2 = b.X;
            y2 = b.Y;

            int dx = Math.Abs(x2 - x1);
            int dy = Math.Abs(y2 - y1);
            int sx = (x1 < x2) ? 1 : -1;
            int sy = (y1 < y2) ? 1 : -1;
            int err = dx - dy;

            while (true)
            {
                yield return new Point(x1, y1);

                if (x1 == x2 && y1 == y2)
                    break;

                int e2 = 2 * err;
                if (e2 > -dy)
                {
                    err -= dy;
                    x1 += sx;
                }
                if (e2 < dx)
                {
                    err += dx;
                    y1 += sy;
                }
            }
        }
    }
}